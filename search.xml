<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[Monkey的7年回忆，也是空杯的开始]]></title>
      <url>http://yoursite.com/2016/10/30/Monkey%E7%9A%847%E5%B9%B4%E5%9B%9E%E5%BF%86/</url>
      <content type="html"><![CDATA[<p>  可能认识我很久的朋友都还记得当初那个刚工作了几年就在行业中各种乱蹦的那个我，一晃眼我工作竟然都7年了。其实朋友圈里我说我已经做了7年了（2009年10月-至今），很多朋友还是很诧异的。其实我自己也经常会有一种错觉，那就是感觉自己年龄在增长，工作年限在增加，而朋友们放佛一直都很年轻，一直没有变老。让我无意间一直会告诉自己，不能落后，要努力前进，追上我的朋友们。但事实上的确大家都在变老，大家也都在前进，我仅仅是为了不让自己落后而前进着。</p>
<h2 id="自嘲"><a href="#自嘲" class="headerlink" title="自嘲"></a>自嘲</h2><p>  依稀记得高中三年，英语没有及格过。当时找了很多补课的老师，我就是所有学生中英语最差的那个。记得老师说陈晔这个同学吧，发挥的好应该可以上个好的一本，发挥的不好估计就最多二本了。记得高考结束查成绩的时候是某一个夏天，我和外婆住在一起，很晚的时候大家都已经在互相告知能够查成绩了，我也没有办法的打开电脑上网查分数。看到分数的那一刻其实我心里是有预期的，但对我外婆来讲可能打击就非常大了。最终结果是分数刚好能够进一个比较差的专科。我从我外婆的表情中可以得到一个信息————这孩子这辈子已经毁了一大半了。那一晚我没心没肺的睡着了，但我估计我外婆一宿没睡。</p>
<p>  记得刚找到测试这份工作的时候是在一家创业公司，一做就是做了两年。这两年中我快乐，忙碌，抑郁，焦虑，几乎什么都有，就是没有去思考。我一直忙于业务，功能，间接性会每天工作到凌晨2点，然后一个人打个小黑车到家楼下的牛肉面馆吃个夜宵，接着回到空荡荡的屋子。偶然的几次会不停的反问自己，这样辛苦为了什么，自己有成长吗？这样委屈为了什么？然而每次都是没有结果的。</p>
<p>  那个时候网络上并没有太多的资料，我在微博上逛游了好久之后看到了段念和左耳朵耗子这样的大神，我也甚至不知深浅的会引用他们的文字并加以自己的评论。那个时候如果知道之后段念能为我的书写序，能和耗子成为同事的话，估计自己要乐疯了。是的，就是这样的。</p>
<p>  创业公司辞职之后，我有半年找不到工作。我每天会接到很多电话，但最终都是以学历不行告终，是的，半年都是如此，甚至连面试的机会都没有。我那个时候并不奢望BAT，但至少想有一份工作。</p>
<p>  记得有一天我在上海田林路的一个十字路口告诉自己，我想在这个行业做点什么，我想帮助这个行业更快速的发展。但与此同时看着眼前的高楼大厦，看着来来往往的人群，再审视了失业的自己。不禁觉得太自嘲了，相比眼前的景色，我再渺小不过了，相比这个行业那么多从业者，我甚至还没有找到工作。是的，没有人认识我，我也不认识谁。</p>
<h2 id="为了生存"><a href="#为了生存" class="headerlink" title="为了生存"></a>为了生存</h2><p>  有一段时间觉得自己不能再窝在公司里了，也想多找人交流交流，想看看外面的世界，也想多知道别人怎么想怎么做的。自己在上海这样一个城市，工作3年了，半年失业，月薪都没有超过7k，心里也是非常着急的。当时2012年年初吧，上海根本就没有什么比较好的交流活动。我就想着自己是不是能自己举办一些交流会，同时也在网上寻求各种交流的机会。虽然现在看来当初这个决定是理所当然的，但对于当初的我来讲简直就是一个不可想象的决定。是的，我决定走出来，去认识大家，让大家认识我。</p>
<p>  我有一个很好的朋友，认识了快15，6年了。某一天我请他去星爸爸喝咖啡，我告诉他我找他没有别的事儿，就是告诉他下我准备自己去闯荡一番，虽然我不知道行业的凶险到底如何，但毕竟面临的是自己未知的事物。当时我记得我原话是这样说的：</p>
<blockquote>
<p>机缘巧合，我可能接下来会在网络上开始尝试做一些分享，在上海线下会尝试举办一些活动。我工作3年了，但我没有意识到自己的进步，我想变得更好，更厉害，所以我选择这样一个途径。当然，我今天找你并非只是告诉你这样一件事情，而是希望你能看着我，如果哪一天我已经忘记了我的初衷，忘记了我的原点，如果哪一天我完全被利益蒙蔽了双眼，那请你来告诉我曾经某一天我找过你，我说过这样一段话</p>
</blockquote>
<p>  从那天之后，我开始自己尝试着做在线的分享，起初半年都是免费的，后来慢慢的一次分享50块钱。那个时候依稀记得自己非常开心，拿着50块钱可以买点自己喜欢的游戏，也会给老婆买点吃的。最辛苦的其实莫过于线下活动，可能有些朋友还记得我创立的“移动测试会”这样一个沙龙，沙龙秉持的一个原则就是免费，有人愿意来，一起交流分享我就非常开心了。那个时候每次找沙龙的场地几乎都不同，有时候在上海体育馆附近，有时候在上海南站附近，我自己出钱租场地，买饮料给前来的朋友，我老婆一段时间挺着大肚子帮我做签到记录等。也许从当时看来这是非常纯粹的为了交流，学习，但从现在反观，这一切其实就是为了生存，没有当初的选择，就不会有今天你们认识的Monkey。</p>
<p>  我从来没有说过情怀就是免费，我认为情怀就是需要坚持那些自己觉得应该坚持的东西，去坚持那些这个世界上已经很多人失去的东西。但赚钱是为了生存，同时也是体现自己劳动成果的一部分。这两者并没有什么冲突的地方，真正的冲突不在这里，而在于每个人的心。我认为我的情怀就在于我贯穿了自己最初的想法，我成为了国内移动互联网测试发展的一个催化剂，并且坚持了7年。</p>
<h2 id="空杯"><a href="#空杯" class="headerlink" title="空杯"></a>空杯</h2><p>  是的，连我自己都不曾想到，华东理工的一名老师的一句话让我冲动的写出了花费一年时间的《大话移动App测试》这样看似狂妄的一本书。很多人和我说这本书写的多么不好多么不好，至少事实这本书目前也已经卖掉了14000+册。但我对这本书有自己独特的见解。我曾经晚上在新天地和一个朋友在Costa喝咖啡。朋友问我</p>
<blockquote>
<p>不久你的书就要出版了，你觉得会卖的好还是不好？</p>
<p>我说“说实话，无论从文笔和技术内容上来讲这本书肯定不能算好，对一些人有帮助是肯定的，但可能很多人也会觉得非常幼稚。但我个人却认为这本书在现在基本上不可能发挥它的价值，等到国内什么时候大家对于测试都有一个正确认知的时候，如果还有人能记得这本书的话，那届时我相信大家会明白它的价值和我想表达的意思的。</p>
</blockquote>
<p>  是的，这就是我的评价。</p>
<p>  之后就是各种不可思议的事情，《大话移动App测试2.0》和《互联网产品测试故事汇》两本书陆续出版，这得感谢恒温和小兔这样两个真心帮助我的朋友。对于我这样一个高考语文没有及格的人来讲，28岁有3本由清华大学出版社出版的书，至少以后能有资本和我女儿吹牛皮了</p>
<p>  我参与的公开课，沙龙活动也开始走出上海，遍布了南京，杭州，北京，深圳，成都，长沙，武汉等各个地区。其实对于我来讲，每次也更像一次旅游，毕竟在这之前我从来没有离开过上海这样一个城市。但感谢给我这些机会人和组织，也让我认识到更多的朋友。</p>
<p>  让我开心的也是这些选择让自己能够有机会前往各个企业进行交流学习，BAT，360，滴滴，银行，JD等企业都让我学习到了很多。之后很多时候也有行业的小伙伴想和我一起去，我说只要有空的都一起过去就ok。谁会拒绝交流学习呢</p>
<p>  现在越来越多的新朋友认识了我，渠道也开始多样化起来。线上线下的活动，知乎Live，微信公众号，书等等。我很多时候都记不起眼前和我打招呼的人是谁，大家是真的要谅解我。😄</p>
<p>  但是现在，我不想循规蹈矩的在去做以前这些事儿了，我也不想再停留在现在的Level和做事习惯上了。就好像当初我站在十字路口一样，我想重新做出一些选择，重新规划自己想要做的事情。与当时不同的就是，我不再是我一个人，我的人脉，我的资历，我的技术手段都是我可以利用的工具。<strong>记得之前有一位对我来讲很重要的朋友和我说，一个人一生也许选择很重要，也许果断的作出选择很重要，但更重要的是懂得放下，懂得舍去，舍得舍得，有舍才有得。</strong>也许当我们沉迷在自己已有的境界中的时候同时也是束缚了自己，不是吗？</p>
<p>  人生还很长，我觉得一个人最失败的地方就是什么都靠自己，不懂的利用资源。如果我下一个7年相比现在没有什么改变，那甚至谈不上活过。前几天我在作出选择的时候，很多人在和我谈人生的意义，我说我觉得我的意义就在于至少我要让这个世界看到我活过，在这个世界上有我活着过的痕迹，我可不想哪一天突然走了之后，在这个世界上甚至找不到我活着过的痕迹，甚至找不到我这个人活着的价值。这并不悲哀，而是悲伤。</p>
<p>  <strong>很多事情你不做，总有别人在做。就好像我一直认为移动互联网测试圈子，哪怕没有我的存在，但这7年行业所发生的事情依然都会发生，只不过做这些事儿的不是我，而是张三李四。事情永远都会有自己的规律，有没有意义取决于是不是自己在主导。</strong>  </p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hexo搭建一套属于自己的Blog]]></title>
      <url>http://yoursite.com/2016/10/27/Hexo%E6%90%AD%E5%BB%BA%E4%B8%80%E5%A5%97%E5%B1%9E%E4%BA%8E%E8%87%AA%E5%B7%B1%E7%9A%84Blog/</url>
      <content type="html"><![CDATA[<h2 id="起源"><a href="#起源" class="headerlink" title="起源"></a>起源</h2><p>  最近机缘巧合的逼迫自己在搭建属于自己的<code>blog</code>，经过了几次周折最终选择了网络上比较火的<code>Hexo</code>，使用之后的确是非常的方便。本文不会去太多的阐述安装，更多的是描述在使用过程中一些记忆深刻的点吧。</p>
<h2 id="命令方式"><a href="#命令方式" class="headerlink" title="命令方式"></a>命令方式</h2><p>  <code>Hexo</code>安装成功之后，整个命令行使用的让我非常开心。😄😄😄</p>
<p>  比如我需要新建一篇文章：<code>hexo new &quot;新文章的名字&quot;</code></p>
<p>  我要清除缓存: <code>hexo clean</code></p>
<p>  我要生成本地的静态网页: <code>hexo g</code></p>
<p>  本地启动服务: <code>hexo s</code></p>
<p>  远程代码部署: <code>hexo d</code></p>
<p>  是的，一切让我愉快，基本上整个从零到现在网站成型过程中没有出现过什么问题。</p>
<h2 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h2><p>  <code>Hexo</code>安装主题也是非常方便的，但这里要提醒一句的是，大部分主题的结构可能是相同的。但<code>star</code>数最多的<code>next</code>主题与其他主题的结构不同。所以说修改文件的时候大家需要自己注意。下面我就简单说下一些功能的添加。</p>
<h2 id="友情链接"><a href="#友情链接" class="headerlink" title="友情链接"></a>友情链接</h2><p>  整个<code>hexo</code>中有两个<code>_config.yml</code>，这两个一个是针对<code>hexo</code>整个网站的，一个是针对主题的。都是非常重要的。如果你使用的主题是本身已经实现了友情链接的话，那么你可以直接在<code>hexo</code>的<code>_config.yml</code>里面增加下面的设置:</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">social:</div><div class="line">github: https:<span class="comment">//github.com/monkeytest15</span></div><div class="line">twitter: https:<span class="comment">//twitter.com/snowangelsimon</span></div><div class="line">weibo: http:<span class="comment">//weibo.com/534598827</span></div><div class="line">zhihu: https:<span class="comment">//www.zhihu.com/people/chen-ye-47</span></div><div class="line">	</div><div class="line"></div></pre></td></tr></table></figure>
<p> 效果如下：</p>
<p> <img src="https://cdn.rawgit.com/monkeytest15/BlogPNG/master/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-10-28%20%E4%B8%8A%E5%8D%8812.25.45.png" alt="社交"></p>
<h2 id="本地搜索"><a href="#本地搜索" class="headerlink" title="本地搜索"></a>本地搜索</h2><p> 安装插件：<code>$ npm install hexo-generator-search --save</code><br> 增加配置：<br> <figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">search:</div><div class="line">	path: search.xml</div><div class="line">	field: post</div><div class="line"></div></pre></td></tr></table></figure></p>
<p>  效果就很好：<br>  <img src="https://cdn.rawgit.com/monkeytest15/BlogPNG/master/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-10-28%20%E4%B8%8A%E5%8D%881.19.05.png" alt="本地搜索"></p>
<h2 id="关于404公益界面"><a href="#关于404公益界面" class="headerlink" title="关于404公益界面"></a>关于404公益界面</h2><p>我们需要新建一个404的page，<code>hexo</code>能够很容易的帮助我们新建。然后只需要在对应的<code>index.md</code>中增加404网站的代码即可。<br> <figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"> </div><div class="line"></div><div class="line">&lt;iframe scrolling='no' frameborder='0' </div><div class="line">src='http://yibo.iyiyun.com/Home/Distribute/ad404/key/1209395' </div><div class="line">width='654' height='470' style='display:block;'&gt;&lt;/iframe&gt;</div><div class="line"></div><div class="line"></div></pre></td></tr></table></figure></p>
<p>这样每当我们404的时候也是做了一份公益了.<br><img src="https://cdn.rawgit.com/monkeytest15/BlogPNG/master/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-10-28%20%E4%B8%8A%E5%8D%881.21.23.png" alt="404"></p>
<h2 id="域名绑定"><a href="#域名绑定" class="headerlink" title="域名绑定"></a>域名绑定</h2><p>这里主要要强调的就是需要在<code>github.io</code>的根目录下新建全大写的<code>CNAME</code>，否则是不会生效的。别的就没有什么主意的了。根据我给的图配置就可以了。<br><img src="https://cdn.rawgit.com/monkeytest15/BlogPNG/master/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-10-27%20%E4%B8%8B%E5%8D%8811.58.25.png" alt="域名绑定"></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[STF修改之三——NodeJS-AngularJS修改传递数据]]></title>
      <url>http://yoursite.com/2016/10/27/STF%E4%BF%AE%E6%94%B9%E4%B9%8B%E4%B8%89%E2%80%94%E2%80%94NodeJS-AngularJS%E4%BF%AE%E6%94%B9%E4%BC%A0%E9%80%92%E6%95%B0%E6%8D%AE/</url>
      <content type="html"></content>
    </entry>
    
    <entry>
      <title><![CDATA[首发—大话2专项测试试读]]></title>
      <url>http://yoursite.com/2016/10/27/%E9%A6%96%E5%8F%91%E2%80%94%E5%A4%A7%E8%AF%9D2%E4%B8%93%E9%A1%B9%E6%B5%8B%E8%AF%95%E8%AF%95%E8%AF%BB/</url>
      <content type="html"></content>
    </entry>
    
    <entry>
      <title><![CDATA[nginx+gor 初心者之旅]]></title>
      <url>http://yoursite.com/2016/10/27/nginx+gor%20%E5%88%9D%E5%BF%83%E8%80%85%E4%B9%8B%E6%97%85/</url>
      <content type="html"></content>
    </entry>
    
    <entry>
      <title><![CDATA[ReactNative 大会卖萌 View]]></title>
      <url>http://yoursite.com/2016/10/27/ReactNative%20%E5%A4%A7%E4%BC%9A%E5%8D%96%E8%90%8C%20View/</url>
      <content type="html"></content>
    </entry>
    
    <entry>
      <title><![CDATA[ReactNative 扫盲实践]]></title>
      <url>http://yoursite.com/2016/10/27/ReactNative%20%E6%89%AB%E7%9B%B2%E5%AE%9E%E8%B7%B5/</url>
      <content type="html"></content>
    </entry>
    
    <entry>
      <title><![CDATA[This is first blood!!!!]]></title>
      <url>http://yoursite.com/2016/10/27/first/</url>
      <content type="html"></content>
    </entry>
    
    <entry>
      <title><![CDATA[《大话移动App测试2.0》序开放试读]]></title>
      <url>http://yoursite.com/2016/07/27/%E3%80%8A%E5%A4%A7%E8%AF%9D%E7%A7%BB%E5%8A%A8App%E6%B5%8B%E8%AF%952-0%E3%80%8B%E5%BA%8F%E5%BC%80%E6%94%BE%E8%AF%95%E8%AF%BB/</url>
      <content type="html"><![CDATA[<p>随着封面的确定，说明大会也临近了，同时说明716拿到书这件事情终于也还是可能的了，只能说一切都太不容易了，设计师妹子被我快嫩死了。</p>
<p><img src="https://cdn.rawgit.com/monkeytest15/BlogPNG/master/1.png" alt="大话2"></p>
<p>这里再次感谢各位支持本书的前辈，以下开放顺序是根据序的提交顺序</p>
<h2 id="钱承君序"><a href="#钱承君序" class="headerlink" title="钱承君序"></a>钱承君序</h2><blockquote>
<p>钱承君介绍：钱承君，多年互联网从业经验，目前在百度担任部门经理岗位，下属百人规模团队，先后负责大数据、图片搜索、云安全、基础架构、网站联盟的质量团队管理工作，在大型分布式系统、大数据系统、广告检索架构等领域拥有丰富实战经验。每年坚持出品最新测试技术实践，乐于分享，欢迎业内同仁交流。<br>非常荣幸受邀为这样一本书写序。看到风格鲜明的前言，我就有深刻的共鸣，有不少个人的想法希望与诸位读者分享。纵观“质量保障”这一行业发展至今，从起初的平顺，到近几年更激烈的变革，可以清晰看到几个关键时间节点：</p>
</blockquote>
<p>工业革命后，分工协作与大规模生产替代了家庭作坊。最早的质量管理体系针对的是制造业，典型的图景是一群白大褂在实验室抽检产品，在合格证上盖章。对于传统制造业，尤其是敏感的食品、药品、精密机械、军工，批次质量不稳定对企业是非常致命的问题。质量管理、品质控制等概念，是远超出我们所谈论的测试工作的，从检测手段到检测执行，从员工培训到奖惩机制，从生产效率到符合法律法规，是一个系统性的工程。质量是企业的生命线，质量管理是CEO背负的重要使命之一。<br>九十年代初，随着摩尔定律的应验与个人电脑的普及，我们有能力架构越来越复杂的软件系统，软件研发也从单兵作战转为集团军作战模式。当时行业中出现一个困扰，大型的、耗资过亿美元的复杂项目有高概率偏离最初目标甚至完全失败，这一现象激活了学术界对软件工程及相关理论的研究兴趣，而软件测试是其中一个重要的分支。瀑布模型开始盛行，一个项目从需求分析、架构、开发、测试、实施，被切分成了清晰隔离的片段，相互间有明确的交付边界，从而尽可能避免大型组织的不可控风险。继承细化的分工的趋势，测试职能也进一步分化，有专注测试工具开发的，有专注测试过程管理的，有专注性能测试的，有专注集成验收的。</p>
<p>千禧一代，随着互联网的快速兴起，带来了一些软件研发理念的变化。在瀑布模型下，测试人员追求的是规避一切风险，尽可能覆盖缺陷，追求尽可能高的质量。在互联网时代，由于缺陷召回成本的降低，团队更多追求的是质量与效率的平衡。国内的行业发展略有滞后，在大约五年前，很多CTO的履历中重要的一条是带领软件组织进行敏捷变革。从市场反应看，出现了短期的对测试开发工程师（及敏捷教练）的旺盛需求，需要自动化与持续集成实践来支持企业的快速迭代。对于互联网时代的企业，快速应对市场变化是一种非常重要的能力。</p>
<p>后敏捷时代（我自造的一个名词），用以描述我看到的当前与未来几年的行业状态。新一代的互联网化软件组织（例如Facebook），宣扬角色模糊，强调全栈工程师，强调一专多能。一个需求的出现到发布与实现，希望能压缩到四个小时左右，极致快速，成为一种新的竞争力。从持续集成，到持续发布，到Dev-OP，是我们目前看到的趋势，目前看，这一波趋势会愈加激进。</p>
<p>如果把这些重大转变放在时间轴上，我们会发现，变革的周期变得越来越短，对单一职能的要求变得越来越高。回到最初在制造业的定义，质量技术服务的是整个业务领域，远远不是“测试”这一单一能力。质量的价值是永久存在的，但是否由测试工程师这一工种抱着几个时代之前的老旧理念去交付，是一个非常存疑的问题，请容许我抱有谨慎的悲观。<br>在上述历史长河，移动测试技术是近几年很重要的那一股激流。五年一个时代，移动互联网的五年，智能移动设备持有量的高速增长，造就商业机会与行业需求增长，是继自动化测试后，对测试行业又一个非常好的机会。手机应用的质量数据分析（崩溃分析）、应用端监控、手机云测、易用的 AB-Test 能力，都是移动应用行业为测试从业人员带来的新机遇。</p>
<p>逐渐我已成为陈晔吐槽的测试管理者，擅长的领域并不在移动应用，对书中提及的测试技术本身无法给出有价值的评价。但是作为在测试行业挥洒过青春、抱有真挚感情的从业人员，非常感激和赞赏陈晔及所有参与者的努力。因为行业有这样一群优秀的执着的追求着技术的人们，测试行业会在激变的时代续存、进化、重生，变得越来越有价值，越来越重要。</p>
<p>想借写序的机会对读者朋友说，开卷有益，每年了解下业内主流的会议、主流的技术变革、主流的新技术，对于技术视野的提升与个人职业生涯的保值，是一个非常好的习惯。如果读者朋友在测试行业足够资深，也非常欢迎和期待能够加入分享者的行列，为测试行业肩负起责任，通过博客、沙龙、微信、乃至出品书籍等各种方式，使得我们所在的行业能持续进步，能在这个风起云涌的新时代，发挥出质量技术应有的影响力与价值。<br>逆水行舟，优胜劣汰，在激烈的变革中一定会有很多人离场，也一定会有很多机会，有很多人脱颖而出。祝福看到这段序言的测试人，希望你能成为脱颖而出的那一个。</p>
<h2 id="戴亦斌序"><a href="#戴亦斌序" class="headerlink" title="戴亦斌序"></a>戴亦斌序</h2><blockquote>
<p>介绍：Testin云测COO，联合创始人</p>
</blockquote>
<p>这是移动互联网的时代，也是创新的时代</p>
<p>2012年的时候，我记得是Testin网站上线的第二年，我们已经发展了很多的开发者来免费使用Testin的服务，当时我正在为一件事发愁，就是如何提升我们平台自动化测试的深度，我们在2012年年初已经基于图像识别的技术开发了一套自动遍历测试的算法，对一般的兼容测试而言，已经相当不错了，但是我们还想做的更深入，我们想支持自定义脚本的测试，这样可以在云端实现自动化功能的测试，这将是一个非常大的突破，但是当时公开的资料非常少，Android本身的自动测试框架也非常弱，我当时在到处搜集资料，正好看到一篇文章，标题就是“Android Application Testing”，我觉得作者在移动APP测试领域颇有见地，而且非常全面，我查了下作者，叫Monkey陈瞱瞱，当时就加了微博，而且通过微博的私信进行了深入的探讨，Monkey当时也在使用Testin的兼容测试，并且提了很多建议和意见，我们还讨论了云端的自动化功能测试、性能测试和测试管理系统，我们都有一个共识，这是一个移动互联网的时代，而移动应用软件的测试与传统软件测试相比，测试方式和内容发生了巨大的变化，软件的移动化，要求软件具备跨终端、跨网络、跨地区、个性化、更新升级速度快等特性，给软件测试带来了更大难度、更多复杂性和更高的成本；测试设备的多样化和不断更新、人力成本的逐年增加，无论原来的自建队伍、自购设备测试还是外包测试的方式已经适应不了市场发展的需要，必将被新的测试方式所替代，这是移动互联网的时代，也是创新的时代。</p>
<p>创新改变行业<br>从2012年之后的几年间，我和Monkey都在测试领域按我们各自对创新的理解进行着具体的实践，我能明显感觉到Monkey的进步和探索的步伐，他从一个专业的测试工程师成长为一个测试行业的布道者，Monkey致力于提升整个测试行业的技术水平，力图改变大家对测试的认识，他在大学担任公益讲师，希望帮助更多的测试行业从业者，2014年他出版了他的第一本著作“大话移动APP测试”，在这本书里，Monkey以自己多年的工作经验和在移动APP测试领域的创新实践，为有志于移动APP测试的测试人员打开了移动APP测试的大门，展现了移动APP测试的复杂性和多样性，为新入行的同学们指明了一条清晰明确的道路。</p>
<p>与Monkey一样，我们也希望通过创新改变行业，Testin是国内第一个提出“云测试”概念:把测试能力搬到云上，并努力去实施的公司，2012年之后，Testin的发展也非常快，Testin兼容测试的用户到今年年初已经突破了70万，我们的真机测试实验室也已经落地到旧金山，Testin真机云测试平台管理的手机和其他移动智能终端设备已经从2012年的几百台扩充到今年年初的四万多台，我们实现了云端的自动化功能测试，并且支持各种常用和最新的测试框架，完善了性能测试，通过Testin的测试大数据分析，我们重新定义了各行业APP的性能基准，为APP开发者提供精准的性能数据标准。</p>
<p>Testin另一个改变行业的创新，就是率先在国内建设了开放的众包测试服务平台，成为国内第一家采用专家众包服务模式，帮助客户解决专业测试难题的公司，Testin利用参与众包的大量测试专家为客户组建专门的虚拟测试队伍完成软件测试，截止到2016年5月，Testin众测平台上已经聚集了上万名的测试专家，以及将近二十万的普通测试人员，Testin已经具备同时服务上万家客户的测试能力，而且这个能力还在不断增长。<br>我和Monkey都相信，在我们的不懈努力下，一定可以通过创新改变测试行业，在移动互联网时代，创新可以改变一切。</p>
<p>这是你的时代，你一定能够成功<br>时隔两年之后，Monkey再次推出了他的新书“大话移动APP测试2”，我很荣幸作为第一批读者先睹为快，在新书里，Monkey保持了他一贯的犀利，他用清晰有趣的方式与大家分享他的研究成果、工作经验以及独特观点，Monkey花了很大篇幅介绍移动APP测试领域的最新趋势与前沿技术，尤其在专项测试、UI自动化、Appium等方面，本书都是你所能找到的最新、最全以及最具实操性的一本书，书中大量的经典案例，对所有想要提升自己技术水平以及想要在移动APP领域取得成功的企业技术管理人员都非常适用。<br>我们正处在一个前所未有的移动互联网时代，也是一个创新为王的时代。</p>
<p>“这是你的时代，你一定能够成功！”，在此，我把这句话送给所有的创业者和本书的读者，相信在读完这本书之后，你工作起来会比以前更轻松，也能取得更为卓越的成绩。</p>
<h2 id="Dennis段念序"><a href="#Dennis段念序" class="headerlink" title="Dennis段念序"></a>Dennis段念序</h2><blockquote>
<p>介绍：现华夏信财副总裁兼互联网金融品牌CEO，前宜人贷CTO、豆瓣网工程副总裁<br>“老板，来一斤移动APP。 要用最新的 UI规范，但不要太花哨。耗电得低，不能偷跑用户的流量。对了，Android兼容性可得充分考虑。还有啊，这个App我们准备两周发布一个版本，开发测试得跟上了 ……”<br>——丹尼斯.段 的要求</p>
</blockquote>
<p>现在的互联网早就成了移动App的天下，地铁里，公交上，某个小面馆的收银台，甚至走在路上深色匆匆的人，大部分时候，都在用或漠然，或微笑，或烦恼的眼神，专注地盯着自己手上那个充满魔力的小盒子，而小盒子的屏幕上，总是某个骄傲的App。</p>
<p>“这是最好的时代，也是个最坏的时代”——虽然这句话的烂大街程度是的文艺青年都都不再原意引用，可我还是觉得，对开发和测试来说，在这个移动应用的时代，这句话是个好的注脚。即使只看中国市场，苹果AppStore每月新增的应用数量也将几千款，想要让某个应用在这么激烈的竞争情况下脱颖而出，可想而知，除了对应用本身是否满足了用户的需求有要求之外，对app的质量和用户体验也有着非常高的要求。</p>
<p>不得不说，在国内，就我所能了解的情况来看，移动App的测试方法仍然处在早期的阶段：大部分移动应用的测试严重的依赖手工，对移动的专项测试、移动应用的持续集成与发布方面的关注，还有相当大的改进空间。当然，造成这种状况的一部分原因是移动App本身的特性：相较于Web 2.0时代的网站来说，移动App的UI逻辑与业务逻辑耦合更加紧密；移动设备在兼容性、移动性（对网络状况的影响）、耐用性（目前主流的智能手机操作系统都采用了尽可能节省电量的进程调度策略）方面的策略则给移动APP测试带来了一些需要深入研究的专题。而另一个造成这种状况的重要原因，自然是这个行业的从业人员，在面对移动App的大潮时，并没有做好必要的准备。</p>
<p>讲真，陈晔晔邀请我为他的《大话移动App2》写序的时候，我其实内心是拒绝的。原因很简单：首先，好几年前我就不再把软件测试当成我的主业了，让我来评价一本描述我长时间不再涉足领域的书，听起来就不太合适；其次，就像陈晔晔在书中吐槽的那样，说起国内的软件现状，我也有满满的吐槽能量无处释放。不过，在读完这本书完整的初稿之后，我还是打开了Word，在我的MBP上敲下了这些文字。</p>
<p>很高兴陈晔晔愿意用一本书来分享他在移动App测试领域的心得，从系统性的角度来看，也许这本书还可以做的更好，但通读全书的时候，我还是很被陈晔晔的真诚所打动。他已经努力的把自己所知，所实践过的重要内容都留在了纸面上，从移动App测试的总体状况、App测试的工具、专项测试等各个方面进行了自己的阐述，尤其是其中对专项的深入挖掘。看得出来，陈晔晔在这个领域的确是下了不少的功夫，也有不少值得品味的心得体会。字里行间，除了对心得的描述之外， 满满的还有陈晔晔“恨铁不成钢”的心情，甚至不乏某些读者可能会觉得不舒服的字句，但作为曾经在测试行业战斗过10多年的我来说，我完全理解陈晔晔的吐槽，以及他希望这个行业能够更优秀，更吸引人的拳拳之心——可以随心所欲地说想说的话，真是羡慕这个活力四射的年纪呀。</p>
<p>这是一本作者用心写就的书，对于想要理解移动App测试的同学而言，开卷必然会有益。回望我曾经战斗过的测试领域，衷心希望这个领域中的同学们多一点开拓，多一点冒险精神和让自己不舒服的勇气。</p>
<p>是为序。</p>
<h2 id="我还想说的"><a href="#我还想说的" class="headerlink" title="我还想说的"></a>我还想说的</h2><p>如果你能看到这里，说明你还是很有耐心的，容我最后啰嗦几句。凌晨1:30，我仅仅只是复制黏贴这些序已经让我热泪盈眶。每个人都代表着一段历史，每个人也都会影响未来，因果循环。让我感动的是这已经过去的历史，让我害怕的是这没有来到的未来，让我兴奋的是有你们这样一群用心做事的战友们。谢谢</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[接口测试初学者心得——从 0 开始]]></title>
      <url>http://yoursite.com/2016/07/16/%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95%E5%88%9D%E5%AD%A6%E8%80%85%E5%BF%83%E5%BE%97%E2%80%94%E2%80%94%E4%BB%8E%200%20%E5%BC%80%E5%A7%8B/</url>
      <content type="html"></content>
    </entry>
    
    <entry>
      <title><![CDATA[接口初心者心得第二版]]></title>
      <url>http://yoursite.com/2016/07/13/%E6%8E%A5%E5%8F%A3%E5%88%9D%E5%BF%83%E8%80%85%E5%BF%83%E5%BE%97%E7%AC%AC%E4%BA%8C%E7%89%88/</url>
      <content type="html"></content>
    </entry>
    
    <entry>
      <title><![CDATA[Jenkins2.0 不作不会死之旅]]></title>
      <url>http://yoursite.com/2016/03/27/%E4%B8%8D%E4%BD%9C%E4%B8%8D%E4%BC%9A%E6%AD%BB%E4%B9%8B%E6%97%85/</url>
      <content type="html"><![CDATA[<p>Jenkins2.0出来有些时间了，我也是一直没空来尝鲜，今天终于有机会了。最终导致我晚饭都没有吃，故事是这样的。</p>
<h2 id="first-blood"><a href="#first-blood" class="headerlink" title="first blood"></a>first blood</h2><p>兴冲冲的前往jenkins2.0的下载网站，和以前一样，提供了.war、.pkg还有docker下载。看着新页面表示希望能有一个好的开始。我这里使用的是mac的osx，然后使用了我最喜欢最傻瓜的<code>java -jar jenkins.war</code>开始了我的傻逼之旅。</p>
<p>正常运行之后看到了如下界面，好感度＋＋😄😄😄<br><img src="https://cdn.rawgit.com/monkeytest15/BlogPNG/master/4762ed644166b3e9db0dc20df12f263f.jpg" alt="jenkins2.0"></p>
<p>接着就是VPN全开，全部下载完毕之后我们可以看到和Jenkins老版本一样的界面，那么第一步我自然先进入设置进行member安全的设置。按照惯例我勾选了如下两个选项</p>
<ul>
<li>设置安全矩阵</li>
<li>允许注册</li>
</ul>
<p>接着我把自己添加了所有root的权限，设置了匿名有read的权限，一切总是那么的美好，一切总是来的那么突然。我点击保存之后，<strong>出现了jenkins crash，说是匿名必须要设置admin权限，卧槽，我简直震惊了。不过无所谓，我选择了先使用我自己的账号进行登陆。稍等，我看到了不该看到的界面，what，jenkins跳出了404界面</strong></p>
<h2 id="second-blood"><a href="#second-blood" class="headerlink" title="second blood"></a>second blood</h2><p>天了鲁了。404怎办呢，我通过了各种Google确定了一种解决方案——放弃了我傻逼的启动方式，换成了tomcat，我没有想到的是这又是一个更傻逼的旅程</p>
<p>经过了一番配置之后，我表示jenkins正常启动了，但是jenkins2.0相比老版本多出来了一个admin初始化密码，在使用java -jar的启动方式的情况下，我们可以在~/.jenkins/secrets下面找到这个密码，然而然而，jenkins2.0无论我们使用什么方式，都提示在同样的路径下，那么问题来了，我也经过了如下尝试</p>
<ul>
<li>我清空了~/.jenkins这个路径</li>
<li>我关闭了所有已经开的服务</li>
</ul>
<p>好，一切重新开始，同时我也查看了tomcat里webapp的log日志，log日志里面清清楚楚的写着:</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">your password is </div><div class="line">**************</div><div class="line">you can also find it in /var/root/jenkins/sercets/......</div></pre></td></tr></table></figure>
<p>苍天啊，你就不能提示的正常点么。结果我发现了原本的~/.jenkins目录压根就没有生成任何的文件，另外我在tomcat里也找不到相关初始化密码的文件。</p>
<p>稍等，有人说你是傻逼么，上面不是有写你的密码是什么么。对的，这个密码我放进去就是说不正确！不正确！不正确！快救救我吧😱😱😱😱😱</p>
<h2 id="no-blood"><a href="#no-blood" class="headerlink" title="no blood"></a>no blood</h2><p>最后，我一切归零，正常搞定了。提醒大家的是<br><strong>不要太在意jenkins2.0的这个提示，看来很多的坑，尽量自己多找找相关文件在哪里<br>千万千万不要去装推荐的插件，插件肯定有冲突，最终我没有安装，所以就没有出现404，成功的过坑了<br>初始化密码是个很坑的设置，各种飘</strong></p>
<p>之后有啥我还会继续更新的。。。。</p>
]]></content>
    </entry>
    
  
  
</search>
